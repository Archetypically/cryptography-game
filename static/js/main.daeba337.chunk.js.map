{"version":3,"sources":["components/attribution.jsx","components/header.jsx","pages/home.jsx","pages/quiz.jsx","data/results.jsx","pages/result.jsx","pages/not-found.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Attribution","Segment","inverted","vertical","as","Icon","name","href","PageHeader","location","useLocation","Container","Header","icon","content","subheader","Menu","borderless","compact","Item","active","pathname","target","disclaimerItems","Home","className","Subheader","Message","floating","color","header","list","Button","Group","labelPosition","size","ls","get","Quiz","useState","currentQuestionIndex","setCurrentQuestionIndex","isReviewEnabled","questions","question","raised","attached","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","totalPages","length","onPageChange","event","data","activePage","Step","widths","title","description","disabled","possibleResults","aes","img","displayName","secondaryNames","details","links","detail","Result","thisResult","setResult","useEffect","resultName","replace","to","LoadingCard","Card","fluid","Content","style","fontSize","fontFamily","Meta","join","Description","text","textAlign","Image","bordered","floated","src","height","map","line","i","extra","Label","thisObj","Detail","NotFound","props","history","useHistory","animated","basic","onClick","goBack","visible","hidden","App","basename","hashType","exact","path","negative","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.daeba337.chunk.js","sourcesContent":["import { Segment, Icon } from \"semantic-ui-react\";\n\nexport default function Attribution () {\n  return (\n    <Segment inverted vertical as=\"footer\">\n      Made with <a><Icon name=\"heart\" /></a>by{\" \"}\n      <a href=\"https://github.com/Archetypically\">\n        @Archetypically\n      </a>\n      .\n    </Segment>\n  )\n}\n","import { Container, Header, Menu, Icon } from \"semantic-ui-react\";\n\nimport { useLocation } from \"react-router-dom\";\n\nexport default function PageHeader () {\n  let location = useLocation();\n\n  return (\n    <Container as=\"nav\">\n      <Header inverted as=\"a\"\n        href=\"#/\"\n        icon=\"code\"\n        content=\"cryptography\"\n        subheader=\"ga.me\" />\n      <Menu borderless compact inverted>\n        <Menu.Item active={ location.pathname === '/' } href=\"#/\">\n          Home\n        </Menu.Item>\n        <Menu.Item href='https://github.com/Archetypically/cryptography-game' target='_blank' >\n          <Icon name=\"github\" />\n        </Menu.Item>\n      </Menu>\n    </Container>\n  );\n}\n","import {\n  Button,\n  Container,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport ls from 'local-storage';\n\nconst disclaimerItems = [\n  \"All data is stored locally in your browser for this session only.\",\n  \"None of your data is ever transmitted elsewhere.\",\n  \"This project was created for educational purposes and is not used to profit in any way.\"\n]\n\nexport default function Home() {\n  return (\n    <Container className=\"content\">\n      <Header inverted as=\"h1\">\n        cryp·tog·ra·phy <code>(/kripˈtäɡrəfē/)</code>\n        <Header.Subheader>\n           the practice and study of techniques for secure communication\n        </Header.Subheader>\n      </Header>\n      <p>\n        From <a href=\"https://en.wikipedia.org/wiki/Caesar_cipher\" target=\"__blank\">Caesarian ciphers</a> to <a href=\"https://en.wikipedia.org/wiki/X.509\" target=\"__blank\">`X.509` public key certificates</a>, <u>cryptography</u> `permeates our everyday lives. Haven't you ever wondered which cryptography you are? Find out now!`\n      </p>\n      <Message floating icon=\"info\" color=\"black\" header=\"Disclaimer\" list={ disclaimerItems }/>\n      <Button.Group>\n        <Button\n          icon\n          labelPosition='left'\n          size=\"huge\"\n          color=\"blue\"\n          href=\"#/quiz\">\n          Take the quiz!\n          <Icon name='right arrow' />\n        </Button>\n        { ls.get(\"lastResultName\") === null\n          ? null\n          : <Button\n            icon\n            labelPosition='right'\n            size=\"huge\"\n            href={\"#/result/\" + ls.get(\"lastResultName\")}\n            color=\"purple\"\n            >\n              See your previous result: {ls.get(\"lastResultName\")}\n              <Icon name='history' />\n            </Button>\n        }\n      </Button.Group>\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport { Segment, Container, Step, Icon, Header, Divider, Pagination } from \"semantic-ui-react\";\n\n\nexport default function Quiz() {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isQuizEnabled, setQuizEnabled] = useState(false);\n  const [isReviewEnabled, setReviewEnabled] = useState(false);\n\n  const questions = [\n    {\n      question: \"cookie?\"\n    },\n    {\n      question: \"cookie2?\"\n    }\n  ]\n\n  function handlePageChange(event, data){\n    // These are 1-indexed, while the list is 0-indexed.\n    setCurrentQuestionIndex(data.activePage - 1);\n  }\n\n  return (\n    <Container className=\"content\">\n      <Segment.Group >\n      <Segment raised size=\"massive\">\n        { questions[currentQuestionIndex].question }\n      </Segment>\n      <Segment raised>\n        content\n      </Segment>\n      <Segment raised attached=\"top\">\n        <Pagination\n          defaultActivePage={1}\n          firstItem={null}\n          lastItem={null}\n          pointing\n          secondary\n          totalPages={ questions.length }\n          onPageChange={ handlePageChange }\n        />\n      </Segment>\n    </Segment.Group>\n    <Step.Group size=\"mini\" widths={2}>\n\n      <Step\n        active={ true }\n        icon=\"question circle\"\n        title=\"Questions\"\n        description=\"Take the quiz\"\n      />\n\n      <Step\n        disabled={ !isReviewEnabled }\n        icon=\"info\"\n        title=\"Review\"\n        description=\"Review your answers\"\n      />\n    </Step.Group>\n\n    </Container>\n  );\n}\n","\nconst possibleResults = {\n  aes: {\n    img: \"https://cdn.proprivacy.com/storage/images/bestvpn/2019/02/shutterstock-344190413-featured_image-social.png\",\n    displayName: \"Advanced Encryption Standard\",\n    secondaryNames: [\"AES\"],\n    details: [\"test1\", \"test2\", \"test3\"],\n    links: [\n      {\n        icon: 'wikipedia w',\n        href: 'https://en.wikipedia.org/wiki/Advanced_Encryption_Standard',\n        name: \"Wikipedia\",\n        detail: \"Advanced_Encryption_Standard\",\n      }\n    ]\n  }\n}\n\nexport default possibleResults;\n","import {\n  useEffect,\n  useState\n} from \"react\";\nimport {\n  Container,\n  Card,\n  Icon,\n  Image,\n  List,\n  Label,\n  Segment\n} from \"semantic-ui-react\";\nimport {\n  useLocation,\n  Redirect\n} from \"react-router-dom\";\nimport possibleResults from \"../data/results.jsx\";\n\n\nexport default function Result() {\n\n  const [thisResult, setResult] = useState(\"loading\");\n  let location = useLocation()\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    const resultName = location.pathname.replace(\"/result/\", \"\");\n    if (!(resultName in possibleResults)) {\n      setResult(null);\n    } else {\n      setResult(resultName);\n    }\n  });\n\n  function renderLinks() {\n    possibleResults[thisResult].links\n  }\n\n  return (<Container>\n    {\n      // Source: https://stackoverflow.com/questions/46592833\n      (thisResult === null && <Redirect to=\"/not-found\"/>)\n      || (thisResult === \"loading\" && <LoadingCard />)\n      ||\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>\n              You are:\n              <h1 style={{fontSize: \"4rem\", fontFamily: \"'Open Sans', Lato\"}}>{possibleResults[thisResult].displayName}</h1>\n            </Card.Header>\n            <Card.Meta>\n              Also known as: {possibleResults[thisResult].secondaryNames.join(\", \")}\n            </Card.Meta>\n            <Card.Description>\n              <Container text textAlign='left'>\n              <Image bordered floated=\"left\" src={possibleResults[thisResult].img} height=\"202\" />\n                {\n                  possibleResults[thisResult].details.map((line, i) =>\n                  {\n                    return (\n                      <div>{line}</div>\n                    );\n                  })\n                }\n              </Container>\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            Learn more:\n            <Label.Group>\n              {\n                possibleResults[thisResult].links.map((thisObj, i) => {\n                  return (\n                    <Label key={thisObj.name} color={thisObj.color} as=\"a\" href={thisObj.href} target=\"__blank\">\n                      <Icon name={thisObj.icon} />\n                      {thisObj.name}\n                      <Label.Detail>{thisObj.detail}</Label.Detail>\n                    </Label>\n                  );\n                })\n              }\n            </Label.Group>\n          </Card.Content>\n        </Card>\n    }\n\n  </Container>);\n}\n","import {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Container, Card, Icon, Image, Button} from \"semantic-ui-react\";\n\nexport default function NotFound(props) {\n  let history = useHistory();\n\n  return (<Container>\n    <Card fluid color=\"red\">\n      <Card.Content>\n        <Card.Header>\n          <h1 style={{\n              fontSize: '20rem'\n            }}>404</h1>\n        </Card.Header>\n        <Card.Meta>Not Found</Card.Meta>\n        <Card.Description>The page you're looking for can't be found.</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Button fluid animated basic color=\"red\" onClick={history.goBack}>\n          <Button.Content visible>Go back</Button.Content>\n          <Button.Content hidden>\n            <Icon name='backward' />\n          </Button.Content>\n        </Button>\n      </Card.Content>\n    </Card>\n  </Container>);\n}\n","import React, {useState} from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation\n} from \"react-router-dom\";\nimport {\n  Button,\n  Container,\n  Header,\n  Menu,\n  Segment,\n  Icon,\n  Divider,\n  Message\n} from \"semantic-ui-react\";\nimport {BrowserView, MobileView} from \"react-device-detect\";\n\nimport Attribution from \"./components/attribution.jsx\";\nimport PageHeader from \"./components/header.jsx\";\nimport Home from \"./pages/home.jsx\";\nimport Quiz from \"./pages/quiz.jsx\";\nimport Result from \"./pages/result.jsx\";\nimport NotFound from \"./pages/not-found.jsx\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (<Container className=\"App\">\n    <BrowserView>\n      <Segment inverted vertical textAlign=\"center\">\n        <Router basename=\"/\" hashType=\"slash\">\n          <PageHeader/>\n          <div>\n            <Switch>\n              <Route exact={true} path=\"/\">\n                <Home/>\n              </Route>\n              <Route path=\"/quiz\">\n                <Quiz />\n              </Route>\n              <Route path=\"/result/*\">\n                <Result />\n              </Route>\n              <Route exact={true} path=\"/not-found\">\n                <NotFound/>\n              </Route>\n              <Redirect to=\"/not-found\"/>\n            </Switch>\n          </div>\n          <Attribution/>\n        </Router>\n      </Segment>\n    </BrowserView>\n    <MobileView>\n      <Container className=\"App\">\n        <Segment inverted vertical textAlign=\"center\">\n          <Message negative floating icon='warning' content='Not supported on mobile. Please use a desktop browser to access this site.'/>\n          <Attribution/>\n        </Segment>\n      </Container>\n    </MobileView>\n  </Container>);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}